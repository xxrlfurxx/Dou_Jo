/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./api/project.ts":
/*!************************!*\
  !*** ./api/project.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\n// 서버하고 데이터 연동하는 api처리 목록을 별도의 객체로 작성\nconst projectApi = {\n    getProject: (id)=>axios__WEBPACK_IMPORTED_MODULE_0___default().get(`${process.env.NEXT_PUBLIC_API_BASE}/projects/${id}`)\n    ,\n    fetchProject: ()=>axios__WEBPACK_IMPORTED_MODULE_0___default().get(`${process.env.NEXT_PUBLIC_API_BASE}/projects`)\n    ,\n    // fetchPaging: (page: number, size: number) =>\n    //   axios().get<ProjectPagingReponse>(\n    //     `${process.env.NEXT_PUBLIC_API_BASE}/projects/paging?page=${page}&size=${size}`\n    //   ),\n    addProject: (projectItem)=>axios__WEBPACK_IMPORTED_MODULE_0___default().post(`${process.env.NEXT_PUBLIC_API_BASE}/projects`, projectItem)\n    ,\n    modifyProject: (id, projectItem)=>axios__WEBPACK_IMPORTED_MODULE_0___default().put(`${process.env.NEXT_PUBLIC_API_BASE}/projects/${id}`, projectItem)\n    ,\n    removeProject: (id)=>axios__WEBPACK_IMPORTED_MODULE_0___default()[\"delete\"](`${process.env.NEXT_PUBLIC_API_BASE}/projects/${id}`)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (projectApi);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcGkvcHJvamVjdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUI7QUFnQ3pCLEVBQXFDO0FBQ3JDLEtBQUssQ0FBQ0MsVUFBVSxHQUFHLENBQUM7SUFDbEJDLFVBQVUsR0FBR0MsRUFBVSxHQUNyQkgsZ0RBQVMsSUFDSkssT0FBTyxDQUFDQyxHQUFHLENBQUNDLG9CQUFvQixDQUFDLFVBQVUsRUFBRUosRUFBRTs7SUFHdERLLFlBQVksTUFDVlIsZ0RBQVMsSUFDSkssT0FBTyxDQUFDQyxHQUFHLENBQUNDLG9CQUFvQixDQUFDLFNBQVM7O0lBR2pELEVBQStDO0lBQy9DLEVBQXVDO0lBQ3ZDLEVBQXNGO0lBQ3RGLEVBQU87SUFFUEUsVUFBVSxHQUFHQyxXQUErQixHQUMxQ1YsaURBQVUsSUFDTEssT0FBTyxDQUFDQyxHQUFHLENBQUNDLG9CQUFvQixDQUFDLFNBQVMsR0FDN0NHLFdBQVc7O0lBR2ZFLGFBQWEsR0FBR1QsRUFBVSxFQUFFTyxXQUErQixHQUN6RFYsZ0RBQVMsSUFDSkssT0FBTyxDQUFDQyxHQUFHLENBQUNDLG9CQUFvQixDQUFDLFVBQVUsRUFBRUosRUFBRSxJQUNsRE8sV0FBVzs7SUFHZkksYUFBYSxHQUFHWCxFQUFVLEdBQ3hCSCxzREFBWSxJQUFhSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0Msb0JBQW9CLENBQUMsVUFBVSxFQUFFSixFQUFFO0FBQzVFLENBQUM7QUFFRCxpRUFBZUYsVUFBVSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVhbXByb2plY3QvLi9hcGkvcHJvamVjdC50cz8yODQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUHJvamVjdFBhZ2luZ1JlcG9uc2Uge1xyXG4gIGNvbnRlbnQ6IFByb2plY3RJdGVtUmVzcG9uc2VbXTtcclxuICBsYXN0OiBib29sZWFuO1xyXG4gIHRvdGFsRWxlbWVudHM6IG51bWJlcjtcclxuICB0b3RhbFBhZ2VzOiBudW1iZXI7XHJcbiAgc2l6ZTogbnVtYmVyO1xyXG4gIG51bWJlcjogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFByb2plY3RJdGVtUmVzcG9uc2Uge1xyXG4gIHByb2plY3RuYW1lOiBzdHJpbmc7XHJcbiAgaWQ6IG51bWJlcjtcclxuICBtaWxlc3RvbmU6IFtdO1xyXG4gIHN0YXJ0ZGF0ZTogc3RyaW5nO1xyXG4gIGVuZGRhdGU6IHN0cmluZztcclxuICBtYW5hZ2VyOiBzdHJpbmc7XHJcbiAgZW5naW5lZXI6IHN0cmluZztcclxuICBtZW1vOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUHJvamVjdEl0ZW1SZXF1ZXN0IHtcclxuICBwcm9qZWN0bmFtZTogc3RyaW5nO1xyXG4gIG1pbGVzdG9uZTogW107XHJcbiAgc3RhcnRkYXRlOiBzdHJpbmc7XHJcbiAgZW5kZGF0ZTogc3RyaW5nO1xyXG4gIG1hbmFnZXI6IHN0cmluZztcclxuICBlbmdpbmVlcjogc3RyaW5nO1xyXG4gIG1lbW86IHN0cmluZztcclxufVxyXG5cclxuLy8g7ISc67KE7ZWY6rOgIOuNsOydtO2EsCDsl7Drj5ntlZjripQgYXBp7LKY66asIOuqqeuhneydhCDrs4Trj4TsnZgg6rCd7LK066GcIOyekeyEsVxyXG5jb25zdCBwcm9qZWN0QXBpID0ge1xyXG4gIGdldFByb2plY3Q6IChpZDogbnVtYmVyKSA9PlxyXG4gICAgYXhpb3MuZ2V0PFByb2plY3RJdGVtUmVzcG9uc2U+KFxyXG4gICAgICBgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRX0vcHJvamVjdHMvJHtpZH1gXHJcbiAgICApLFxyXG5cclxuICBmZXRjaFByb2plY3Q6ICgpID0+XHJcbiAgICBheGlvcy5nZXQ8UHJvamVjdEl0ZW1SZXNwb25zZVtdPihcclxuICAgICAgYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX0JBU0V9L3Byb2plY3RzYFxyXG4gICAgKSxcclxuXHJcbiAgLy8gZmV0Y2hQYWdpbmc6IChwYWdlOiBudW1iZXIsIHNpemU6IG51bWJlcikgPT5cclxuICAvLyAgIGF4aW9zKCkuZ2V0PFByb2plY3RQYWdpbmdSZXBvbnNlPihcclxuICAvLyAgICAgYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX0JBU0V9L3Byb2plY3RzL3BhZ2luZz9wYWdlPSR7cGFnZX0mc2l6ZT0ke3NpemV9YFxyXG4gIC8vICAgKSxcclxuXHJcbiAgYWRkUHJvamVjdDogKHByb2plY3RJdGVtOiBQcm9qZWN0SXRlbVJlcXVlc3QpID0+XHJcbiAgICBheGlvcy5wb3N0PFByb2plY3RJdGVtUmVzcG9uc2U+KFxyXG4gICAgICBgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRX0vcHJvamVjdHNgLFxyXG4gICAgICBwcm9qZWN0SXRlbVxyXG4gICAgKSxcclxuXHJcbiAgbW9kaWZ5UHJvamVjdDogKGlkOiBudW1iZXIsIHByb2plY3RJdGVtOiBQcm9qZWN0SXRlbVJlcXVlc3QpID0+XHJcbiAgICBheGlvcy5wdXQ8UHJvamVjdEl0ZW1SZXNwb25zZT4oXHJcbiAgICAgIGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9CQVNFfS9wcm9qZWN0cy8ke2lkfWAsXHJcbiAgICAgIHByb2plY3RJdGVtXHJcbiAgICApLFxyXG5cclxuICByZW1vdmVQcm9qZWN0OiAoaWQ6IG51bWJlcikgPT5cclxuICAgIGF4aW9zLmRlbGV0ZTxib29sZWFuPihgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRX0vcHJvamVjdHMvJHtpZH1gKSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByb2plY3RBcGk7XHJcbiJdLCJuYW1lcyI6WyJheGlvcyIsInByb2plY3RBcGkiLCJnZXRQcm9qZWN0IiwiaWQiLCJnZXQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0JBU0UiLCJmZXRjaFByb2plY3QiLCJhZGRQcm9qZWN0IiwicHJvamVjdEl0ZW0iLCJwb3N0IiwibW9kaWZ5UHJvamVjdCIsInB1dCIsInJlbW92ZVByb2plY3QiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./api/project.ts\n");

/***/ }),

/***/ "./middleware/modules/project.ts":
/*!***************************************!*\
  !*** ./middleware/modules/project.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requestAddProject\": () => (/* binding */ requestAddProject),\n/* harmony export */   \"requestFetchProject\": () => (/* binding */ requestFetchProject),\n/* harmony export */   \"requestRemoveProject\": () => (/* binding */ requestRemoveProject),\n/* harmony export */   \"requestModifyProject\": () => (/* binding */ requestModifyProject),\n/* harmony export */   \"default\": () => (/* binding */ projectSaga)\n/* harmony export */ });\n/* harmony import */ var _provider_modules_project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../provider/modules/project */ \"./provider/modules/project.ts\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @redux-saga/core/effects */ \"@redux-saga/core/effects\");\n/* harmony import */ var _redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _api_project__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../api/project */ \"./api/project.ts\");\n/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! redux-saga/effects */ \"redux-saga/effects\");\n/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n// project를 추가하도록 요청하는 action\nconst requestAddProject = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAction)(`${_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name}/requestAddProject`);\nconst requestFetchProject = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAction)(`${_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name}/requestFetchProject`);\nconst requestRemoveProject = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAction)(`${_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name}/requestRemoveProject`);\nconst requestModifyProject = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAction)(`${_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"].name}/requestModifyProject`);\n// ==== saga action 처리 부분 ====//\nfunction* addData(action) {\n    yield console.log(\"---addData---\");\n    yield console.log(action);\n    try {\n        // action의 payload로 넘어온 객체\n        const projectItemPayload = action.payload;\n        // res api로 보낼 요청객체\n        const projectItemRequest = {\n            projectname: projectItemPayload.projectname,\n            milestone: [],\n            startdate: projectItemPayload.startdate,\n            enddate: projectItemPayload.enddate,\n            manager: projectItemPayload.manager,\n            engineer: projectItemPayload.engineer,\n            memo: projectItemPayload.memo\n        };\n        // rest api에 post로 데이터를 보냄\n        // 함수를 호출함 (비동기함수)\n        // call(비동기함수, 매개변수1, 매개변수2...)\n        // await api.add(projectItemRequest) 이 구문과 일치\n        const result = yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.call)(_api_project__WEBPACK_IMPORTED_MODULE_3__[\"default\"].addProject, projectItemRequest);\n        const projectItem = {\n            id: result.data.id,\n            projectname: result.data.projectname,\n            startdate: result.data.startdate,\n            enddate: result.data.enddate,\n            manager: result.data.manager,\n            engineer: result.data.engineer,\n            milestone: result.data.milestone,\n            memo: result.data.memo\n        };\n        yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.addProject)(projectItem));\n        yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.initialCompleted)());\n    } catch (e) {\n        // 에러 발생시\n        console.log(\"Add Project: Error\");\n    }\n}\nfunction* modifyData(action) {\n    yield console.log(\"----Saga: modify project Data----\");\n    const projectItemPayload = action.payload;\n    // rest api로 보낼 요청 객체\n    const projectItemRequest = {\n        projectname: projectItemPayload.projectname,\n        milestone: [],\n        startdate: projectItemPayload.startdate,\n        enddate: projectItemPayload.enddate,\n        manager: projectItemPayload.manager,\n        engineer: projectItemPayload.engineer,\n        memo: projectItemPayload.memo\n    };\n    const result = yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.call)(_api_project__WEBPACK_IMPORTED_MODULE_3__[\"default\"].modifyProject, projectItemPayload.id, projectItemRequest);\n    // 백엔드에서 처리한 데이터 객체로 state를 변경할 payload객체 생성\n    const projectItem = {\n        id: result.data.id,\n        projectname: result.data.projectname,\n        milestone: result.data.milestone,\n        startdate: result.data.startdate,\n        enddate: result.data.enddate,\n        manager: result.data.manager,\n        engineer: result.data.engineer,\n        memo: result.data.memo\n    };\n    // state 변경\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.modifyProject)(projectItem));\n    // complete 속성 삭제\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.initialCompleted)());\n}\nfunction* fetchData() {\n    yield console.log(\"---saga: fetch Project Data---\");\n    const result = yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.call)(_api_project__WEBPACK_IMPORTED_MODULE_3__[\"default\"].fetchProject);\n    const project = result.data.map((item)=>({\n            id: item.id,\n            projectname: item.projectname,\n            milestone: item.milestone,\n            startdate: item.startdate,\n            enddate: item.enddate,\n            manager: item.manager,\n            engineer: item.engineer,\n            memo: item.memo\n        })\n    );\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.initialProject)(project));\n}\nfunction* removeData(action) {\n    yield console.log(\"----saga: delete project Data // delete Project Id: \" + action.payload);\n    const id = action.payload;\n    const result = yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.call)(_api_project__WEBPACK_IMPORTED_MODULE_3__[\"default\"].removeProject, id);\n    if (result.data) {\n        yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.removeProject)(id));\n    }\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.put)((0,_provider_modules_project__WEBPACK_IMPORTED_MODULE_0__.initialCompleted)());\n}\nfunction* projectSaga() {\n    // dispatcher 동일한 타입의 액션을 모두 처리\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.takeEvery)(requestAddProject, addData);\n    yield (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_2__.takeEvery)(requestFetchProject, fetchData);\n    yield (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_4__.takeLatest)(requestModifyProject, modifyData);\n    yield (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_4__.takeLatest)(requestRemoveProject, removeData);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./middleware/modules/project.ts\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst prefetched = {\n};\nfunction prefetch(router, href, as, options) {\n    if (true) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n    const { nodeName  } = e.currentTarget;\n    if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    //  avoid scroll for urls with anchor refs\n    if (scroll == null && as.indexOf('#') >= 0) {\n        scroll = false;\n    }\n    // replace state instead of push if prop is present\n    router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll\n    });\n}\nfunction Link(props) {\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : ''));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'locale') {\n                if (props[key] && valType !== 'string') {\n                    throw createPropError({\n                        key,\n                        expected: '`string`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n        }\n    }\n    const p = props.prefetch !== false;\n    const router = (0, _router1).useRouter();\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, props.href, true);\n        return {\n            href: resolvedHref,\n            as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        props.href,\n        props.as\n    ]);\n    let { children , replace , shallow , scroll , locale  } = props;\n    // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n    if (typeof children === 'string') {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (true) {\n        try {\n            child = _react.default.Children.only(children);\n        } catch (err) {\n            throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : ''));\n        }\n    } else {}\n    const childRef = child && typeof child === 'object' && child.ref;\n    const [setIntersectionRef, isVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: '200px'\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === 'function') childRef(el);\n            else if (typeof childRef === 'object') {\n                childRef.current = el;\n            }\n        }\n    }, [\n        childRef,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n            }\n        }\n    };\n    childProps.onMouseEnter = (e)=>{\n        if (!(0, _router).isLocalURL(href)) return;\n        if (child.props && typeof child.props.onMouseEnter === 'function') {\n            child.props.onMouseEnter(e);\n        }\n        prefetch(router, href, as, {\n            priority: true\n        });\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n        const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n        childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return(/*#__PURE__*/ _react.default.cloneElement(child, childProps));\n}\nvar _default = Link;\nexports[\"default\"] = _default; //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\nfunction removePathTrailingSlash(path) {\n    return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash; //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWkEsOENBQTZDLENBQUM7SUFDMUNHLEtBQUssRUFBRSxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELCtCQUErQixHQUFHRSx1QkFBdUI7QUFDekRGLGtDQUFrQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ2xDRSx1QkFBdUIsQ0FBQ0UsSUFBSSxFQUFFLENBQUM7SUFDcEMsTUFBTSxDQUFDQSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxDQUFHLE9BQUtELElBQUksS0FBSyxDQUFHLEtBQUdBLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUlGLElBQUk7QUFDeEUsQ0FBQztBQUNELEtBQUssQ0FBQ0QsMEJBQTBCLEdBQUdJLE1BQWlDLEdBQUcsQ0FRdEUsR0FBR0wsdUJBQXVCO0FBQzNCRixrQ0FBa0MsR0FBR0csMEJBQTBCLENBRS9ELENBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVhbXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgICB2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5yZW1vdmVQYXRoVHJhaWxpbmdTbGFzaCA9IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xyXG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xyXG5mdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKSB7XHJcbiAgICByZXR1cm4gcGF0aC5lbmRzV2l0aCgnLycpICYmIHBhdGggIT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcclxufVxyXG5jb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSCA/IChwYXRoKT0+e1xyXG4gICAgaWYgKC9cXC5bXi9dK1xcLz8kLy50ZXN0KHBhdGgpKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGgpO1xyXG4gICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcclxuICAgICAgICByZXR1cm4gcGF0aDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGggKyAnLyc7XHJcbiAgICB9XHJcbn0gOiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaDtcclxuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoO1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJwYXRoIiwiZW5kc1dpdGgiLCJzbGljZSIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfVFJBSUxJTkdfU0xBU0giLCJ0ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback; //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWkEsOENBQTZDLENBQUM7SUFDMUNHLEtBQUssRUFBRSxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELDBCQUEwQixHQUFHQSwyQkFBMkIsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNqRSxLQUFLLENBQUNHLG1CQUFtQixHQUFHLE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLENBQVcsY0FBSUEsSUFBSSxDQUFDRCxtQkFBbUIsSUFBSUMsSUFBSSxDQUFDRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxNQUFNLEtBQUssUUFBUSxDQUFDQyxFQUFFLEVBQUUsQ0FBQztJQUMxSSxHQUFHLENBQUNDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFHO0lBQ3BCLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDLFFBQVEsR0FBRyxDQUFDO1FBQzFCSixFQUFFLENBQUMsQ0FBQztZQUNBSyxVQUFVLEVBQUUsS0FBSztZQUNqQkMsYUFBYSxFQUFFLFFBQVEsR0FBRyxDQUFDO2dCQUN2QixNQUFNLENBQUNDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUlOLElBQUksQ0FBQ0MsR0FBRyxLQUFLRixLQUFLO1lBQy9DLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQyxFQUFFLENBQUM7QUFDUixDQUFDO0FBQ0RSLDJCQUEyQixHQUFHRyxtQkFBbUI7QUFDakQsS0FBSyxDQUFDRCxrQkFBa0IsR0FBRyxNQUFNLENBQUNFLElBQUksS0FBSyxDQUFXLGNBQUlBLElBQUksQ0FBQ0Ysa0JBQWtCLElBQUlFLElBQUksQ0FBQ0Ysa0JBQWtCLENBQUNHLElBQUksQ0FBQ0MsTUFBTSxLQUFLLFFBQVEsQ0FBQ1UsRUFBRSxFQUFFLENBQUM7SUFDdkksTUFBTSxDQUFDQyxZQUFZLENBQUNELEVBQUU7QUFDMUIsQ0FBQztBQUNEaEIsMEJBQTBCLEdBQUdFLGtCQUFrQixDQUUvQyxDQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzPzFlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gICAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gZXhwb3J0cy5yZXF1ZXN0SWRsZUNhbGxiYWNrID0gdm9pZCAwO1xyXG5jb25zdCByZXF1ZXN0SWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjayAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpO1xyXG4gICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgY2Ioe1xyXG4gICAgICAgICAgICBkaWRUaW1lb3V0OiBmYWxzZSxcclxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sIDEpO1xyXG59O1xyXG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xyXG5jb25zdCBjYW5jZWxJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2sgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGlkKSB7XHJcbiAgICByZXR1cm4gY2xlYXJUaW1lb3V0KGlkKTtcclxufTtcclxuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBjYW5jZWxJZGxlQ2FsbGJhY2s7XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if ('future' in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)\n    ).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement('link');\n        return(// with relList.support\n        (!!window.MSInputMethodContext && !!document.documentMode) || link.relList.supports('prefetch'));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((res, rej)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return res();\n        }\n        link = document.createElement('link');\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = res;\n        link.onerror = rej;\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {\n    });\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement('script');\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n        ;\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms)\n                );\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\nfunction getMiddlewareManifest() {\n    if (self.__MIDDLEWARE_MANIFEST) {\n        return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n    }\n    const onMiddlewareManifest = new Promise((resolve)=>{\n        const cb = self.__MIDDLEWARE_MANIFEST_CB;\n        self.__MIDDLEWARE_MANIFEST_CB = ()=>{\n            resolve(self.__MIDDLEWARE_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client middleware manifest')));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        return Promise.resolve({\n            scripts: [\n                assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js')), \n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + '/_next/' + encodeURI(entry)\n        );\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith('.js')\n            ),\n            css: allFiles.filter((v)=>v.endsWith('.css')\n            )\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                })\n            );\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route1, execute) {\n            (execute ? Promise.resolve().then(()=>execute()\n            ).then((exports)=>({\n                    component: exports && exports.default || exports,\n                    exports: exports\n                })\n            , (err)=>({\n                    error: err\n                })\n            ) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route1);\n                if (old && 'resolve' in old) {\n                    if (input) {\n                        entrypoints.set(route1, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route1, input);\n                    } else {\n                        entrypoints.delete(route1);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route1);\n                }\n            });\n        },\n        loadRoute (route2, prefetch) {\n            return withFuture(route2, routes, ()=>{\n                const routeFilesPromise = getFilesForRoute(assetPrefix, route2).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route2) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet)), \n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route2).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        })\n                    );\n                });\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        if (routeFilesPromise) {\n                            return routeFilesPromise.finally(()=>{\n                                resolve();\n                            });\n                        }\n                    });\n                }\n                return resolvePromiseWithTimeout(routeFilesPromise, MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route2}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return 'error' in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                });\n            });\n        },\n        prefetch (route3) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route3).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script, 'script')\n                ) : [])\n            ).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route3, true).catch(()=>{\n                    })\n                );\n            }).catch(()=>{\n            });\n        }\n    };\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n    enumerable: true,\n    get: function() {\n        return _router.default;\n    }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n    enumerable: true,\n    get: function() {\n        return _withRouter.default;\n    }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst singletonRouter = {\n    router: null,\n    readyCallbacks: [],\n    ready (cb1) {\n        if (this.router) return cb1();\n        if (false) {}\n    }\n};\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n    'pathname',\n    'route',\n    'query',\n    'asPath',\n    'components',\n    'isFallback',\n    'basePath',\n    'locale',\n    'locales',\n    'defaultLocale',\n    'isReady',\n    'isPreview',\n    'isLocaleDomain',\n    'domainLocales', \n];\nconst routerEvents = [\n    'routeChangeStart',\n    'beforeHistoryChange',\n    'routeChangeComplete',\n    'routeChangeError',\n    'hashChangeStart',\n    'hashChangeComplete', \n];\nconst coreMethodFields = [\n    'push',\n    'replace',\n    'reload',\n    'back',\n    'prefetch',\n    'beforePopState', \n];\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n    get () {\n        return _router.default.events;\n    }\n});\nurlPropertyFields.forEach((field)=>{\n    // Here we need to use Object.defineProperty because we need to return\n    // the property assigned to the actual router\n    // The value might get changed as we change routes and this is the\n    // proper way to access it\n    Object.defineProperty(singletonRouter, field, {\n        get () {\n            const router = getRouter();\n            return router[field];\n        }\n    });\n});\ncoreMethodFields.forEach((field)=>{\n    singletonRouter[field] = (...args)=>{\n        const router = getRouter();\n        return router[field](...args);\n    };\n});\nrouterEvents.forEach((event)=>{\n    singletonRouter.ready(()=>{\n        _router.default.events.on(event, (...args)=>{\n            const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n            const _singletonRouter = singletonRouter;\n            if (_singletonRouter[eventField]) {\n                try {\n                    _singletonRouter[eventField](...args);\n                } catch (err) {\n                    console.error(`Error when running the Router event: ${eventField}`);\n                    console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + '');\n                }\n            }\n        });\n    });\n});\nfunction getRouter() {\n    if (!singletonRouter.router) {\n        const message = 'No router instance found.\\n' + 'You should only use \"next/router\" on the client side of your app.\\n';\n        throw new Error(message);\n    }\n    return singletonRouter.router;\n}\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\nfunction useRouter() {\n    return _react.default.useContext(_routerContext.RouterContext);\n}\nfunction createRouter(...args) {\n    singletonRouter.router = new _router.default(...args);\n    singletonRouter.readyCallbacks.forEach((cb)=>cb()\n    );\n    singletonRouter.readyCallbacks = [];\n    return singletonRouter.router;\n}\nfunction makePublicRouterInstance(router) {\n    const scopedRouter = router;\n    const instance = {\n    };\n    for (const property of urlPropertyFields){\n        if (typeof scopedRouter[property] === 'object') {\n            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {\n            }, scopedRouter[property]) // makes sure query is not stateful\n            ;\n            continue;\n        }\n        instance[property] = scopedRouter[property];\n    }\n    // Events is a static property on the router, the router doesn't have to be initialized to use it\n    instance.events = _router.default.events;\n    coreMethodFields.forEach((field)=>{\n        instance[field] = (...args)=>{\n            return scopedRouter[field](...args);\n        };\n    });\n    return instance;\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined';\nfunction useIntersection({ rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const unobserve = (0, _react).useRef();\n    const [visible, setVisible] = (0, _react).useState(false);\n    const setRef = (0, _react).useCallback((el)=>{\n        if (unobserve.current) {\n            unobserve.current();\n            unobserve.current = undefined;\n        }\n        if (isDisabled || visible) return;\n        if (el && el.tagName) {\n            unobserve.current = observe(el, (isVisible)=>isVisible && setVisible(isVisible)\n            , {\n                rootMargin\n            });\n        }\n    }, [\n        isDisabled,\n        rootMargin,\n        visible\n    ]);\n    (0, _react).useEffect(()=>{\n        if (!hasIntersectionObserver) {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true)\n                );\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback)\n                ;\n            }\n        }\n    }, [\n        visible\n    ]);\n    return [\n        setRef,\n        visible\n    ];\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n        }\n    };\n}\nconst observers = new Map();\nfunction createObserver(options) {\n    const id = options.rootMargin || '';\n    let instance = observers.get(id);\n    if (instance) {\n        return instance;\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    observers.set(id, instance = {\n        id,\n        observer,\n        elements\n    });\n    return instance;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = withRouter;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction withRouter(ComposedComponent) {\n    function WithRouterWrapper(props) {\n        return(/*#__PURE__*/ _react.default.createElement(ComposedComponent, Object.assign({\n            router: (0, _router).useRouter()\n        }, props)));\n    }\n    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n    if (true) {\n        const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n        WithRouterWrapper.displayName = `withRouter(${name})`;\n    }\n    return WithRouterWrapper;\n} //# sourceMappingURL=with-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBWTtBQUNaQSw4Q0FBNkMsQ0FBQztJQUMxQ0csS0FBSyxFQUFFLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csVUFBVTtBQUM1QixHQUFHLENBQUNDLE1BQU0sR0FBR0Msc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsb0JBQU87QUFDbkQsR0FBRyxDQUFDQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQVU7U0FDdkJELHNCQUFzQixDQUFDRyxHQUFHLEVBQUUsQ0FBQztJQUNsQyxNQUFNLENBQUNBLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLEdBQUdELEdBQUcsR0FBRyxDQUFDO1FBQ2xDTixPQUFPLEVBQUVNLEdBQUc7SUFDaEIsQ0FBQztBQUNMLENBQUM7U0FDUUwsVUFBVSxDQUFDTyxpQkFBaUIsRUFBRSxDQUFDO2FBQzNCQyxpQkFBaUIsQ0FBQ0MsS0FBSyxFQUFFLENBQUM7UUFDL0IsTUFBTSxDQUFDLEVBQWEsWUFBQ1IsTUFBTSxDQUFDRixPQUFPLENBQUNXLGFBQWEsQ0FBQ0gsaUJBQWlCLEVBQUVaLE1BQU0sQ0FBQ2dCLE1BQU0sQ0FBQyxDQUFDO1lBQ2hGQyxNQUFNLEdBQUcsQ0FBQyxFQUFFUixPQUFPLEVBQUVTLFNBQVM7UUFDbEMsQ0FBQyxFQUFFSixLQUFLO0lBQ1osQ0FBQztJQUNERCxpQkFBaUIsQ0FBQ00sZUFBZSxHQUFHUCxpQkFBaUIsQ0FBQ08sZUFBZTtJQUNyRU4saUJBQWlCLENBQUNPLG1CQUFtQixHQUFHUixpQkFBaUIsQ0FBQ1EsbUJBQW1CO0lBQzdFLEVBQUUsRUFwQk4sSUFvQjZDLEVBQUUsQ0FBQztRQUN4QyxLQUFLLENBQUNDLElBQUksR0FBR1QsaUJBQWlCLENBQUNVLFdBQVcsSUFBSVYsaUJBQWlCLENBQUNTLElBQUksSUFBSSxDQUFTO1FBQ2pGUixpQkFBaUIsQ0FBQ1MsV0FBVyxJQUFJLFdBQVcsRUFBRUQsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUNELE1BQU0sQ0FBQ1IsaUJBQWlCO0FBQzVCLENBQUMsQ0FFc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWFtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3dpdGgtcm91dGVyLmpzP2FjN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gICAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuZGVmYXVsdCA9IHdpdGhSb3V0ZXI7XHJcbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XHJcbnZhciBfcm91dGVyID0gcmVxdWlyZShcIi4vcm91dGVyXCIpO1xyXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xyXG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcclxuICAgICAgICBkZWZhdWx0OiBvYmpcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb3NlZENvbXBvbmVudCkge1xyXG4gICAgZnVuY3Rpb24gV2l0aFJvdXRlcldyYXBwZXIocHJvcHMpIHtcclxuICAgICAgICByZXR1cm4oLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbXBvc2VkQ29tcG9uZW50LCBPYmplY3QuYXNzaWduKHtcclxuICAgICAgICAgICAgcm91dGVyOiAoMCwgX3JvdXRlcikudXNlUm91dGVyKClcclxuICAgICAgICB9LCBwcm9wcykpKTtcclxuICAgIH1cclxuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmdldEluaXRpYWxQcm9wcyA9IENvbXBvc2VkQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcztcclxuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLm9yaWdHZXRJbml0aWFsUHJvcHMgPSBDb21wb3NlZENvbXBvbmVudC5vcmlnR2V0SW5pdGlhbFByb3BzO1xyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICAgICAgICBjb25zdCBuYW1lID0gQ29tcG9zZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9zZWRDb21wb25lbnQubmFtZSB8fCAnVW5rbm93bic7XHJcbiAgICAgICAgV2l0aFJvdXRlcldyYXBwZXIuZGlzcGxheU5hbWUgPSBgd2l0aFJvdXRlcigke25hbWV9KWA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXI7XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpdGgtcm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJ3aXRoUm91dGVyIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcm91dGVyIiwib2JqIiwiX19lc01vZHVsZSIsIkNvbXBvc2VkQ29tcG9uZW50IiwiV2l0aFJvdXRlcldyYXBwZXIiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJhc3NpZ24iLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJnZXRJbml0aWFsUHJvcHMiLCJvcmlnR2V0SW5pdGlhbFByb3BzIiwibmFtZSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../../../server/denormalize-page-path */ \"../../../server/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../shared/lib/utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _getMiddlewareRegex = __webpack_require__(/*! ./utils/get-middleware-regex */ \"./utils/get-middleware-regex\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet detectDomainLocale;\nif (false) {}\nconst basePath =  false || '';\nfunction buildCancellationError() {\n    return Object.assign(new Error('Route Cancelled'), {\n        cancelled: true\n    });\n}\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const pathname = pathNoQueryHash(path);\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.substr(pathname.length);\n}\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nfunction addLocale(path, locale, defaultLocale) {\n    if (false) {}\n    return path;\n}\nfunction delLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nfunction pathNoQueryHash(path) {\n    const queryIndex = path.indexOf('?');\n    const hashIndex = path.indexOf('#');\n    if (queryIndex > -1 || hashIndex > -1) {\n        path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n    }\n    return path;\n}\nfunction hasBasePath(path) {\n    path = pathNoQueryHash(path);\n    return path === basePath || path.startsWith(basePath + '/');\n}\nfunction addBasePath(path) {\n    // we only add the basepath on relative urls\n    return addPathPrefix(path, basePath);\n}\nfunction delBasePath(path) {\n    path = path.slice(basePath.length);\n    if (!path.startsWith('/')) path = `/${path}`;\n    return path;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (url.startsWith('/') || url.startsWith('#') || url.startsWith('?')) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = '';\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') || // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || '';\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            replaced = `${!value ? '/' : ''}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)\n        ).join('/') : encodeURIComponent(value)) || '/');\n    })) {\n        interpolatedRoute = '' // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction omitParmsFromQuery(query, params) {\n    const filteredQuery = {\n    };\n    Object.keys(query).forEach((key)=>{\n        if (!params.includes(key)) {\n            filteredQuery[key] = query[key];\n        }\n    });\n    return filteredQuery;\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === 'string' ? href : (0, _utils).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.substr(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split('?');\n    if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL('/', 'http://n');\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = '';\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _utils).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omitParmsFromQuery(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefHadOrigin = resolvedHref.startsWith(origin);\n    const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\nfunction fetchRetry(url, attempts, opts) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: 'same-origin'\n    }).then((res)=>{\n        if (!res.ok) {\n            if (attempts > 1 && res.status >= 500) {\n                return fetchRetry(url, attempts - 1, opts);\n            }\n            if (res.status === 404) {\n                return res.json().then((data)=>{\n                    if (data.notFound) {\n                        return {\n                            notFound: SSG_DATA_NOT_FOUND\n                        };\n                    }\n                    throw new Error(`Failed to load static props`);\n                });\n            }\n            throw new Error(`Failed to load static props`);\n        }\n        return opts.text ? res.text() : res.json();\n    });\n}\nfunction fetchNextData(dataHref, isServerRender, text, inflightCache, persistCache) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1, {\n        text\n    }).catch((err)=>{\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            (0, _routeLoader).markAssetError(err);\n        }\n        throw err;\n    }).then((data)=>{\n        if (!persistCache || 'development' !== 'production') {\n            delete inflightCache[cacheKey];\n        }\n        return data;\n    }).catch((err)=>{\n        delete inflightCache[cacheKey];\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err: err2 , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview  }){\n        // Static Data Cache\n        this.sdc = {\n        };\n        // In-flight Server Data Requests, for deduping\n        this.sdr = {\n        };\n        // In-flight middleware preflight requests\n        this.sde = {\n        };\n        this._idx = 0;\n        this.onPopState = (e)=>{\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState('replaceState', (0, _utils).formatWithValidation({\n                    pathname: addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , idx  } = state;\n            if (false) {}\n            this._idx = idx;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change('replaceState', url, as, Object.assign({\n            }, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale\n            }), forcedScroll);\n        };\n        // represents the current component key\n        this.route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {\n        };\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== '/_error') {\n            var ref;\n            this.components[this.route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err: err2,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n                __N_RSC: !!((ref = Component) === null || ref === void 0 ? void 0 : ref.__next_rsc__)\n            };\n        }\n        this.components['/_app'] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname1;\n        this.query = query1;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.asPath = autoExportDynamic ? pathname1 : as1;\n        this.basePath = basePath;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isFallback = isFallback;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        this.isPreview = !!isPreview;\n        this.isLocaleDomain = false;\n        if (false) {}\n        if (false) {}\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\r\n   * Go back in history\r\n   */ back() {\n        window.history.back();\n    }\n    /**\r\n   * Performs a `pushState` with arguments\r\n   * @param url of the route\r\n   * @param as masks `url` for the browser\r\n   * @param options object you can define `shallow` and other options\r\n   */ push(url, as, options = {\n    }) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change('pushState', url, as, options);\n    }\n    /**\r\n   * Performs a `replaceState` with arguments\r\n   * @param url of the route\r\n   * @param as masks `url` for the browser\r\n   * @param options object you can define `shallow` and other options\r\n   */ replace(url1, as2, options1 = {\n    }) {\n        ({ url: url1 , as: as2  } = prepareUrlAs(this, url1, as2));\n        return this.change('replaceState', url1, as2, options1);\n    }\n    async change(method, url2, as3, options2, forcedScroll) {\n        if (!isLocalURL(url2)) {\n            window.location.href = url2;\n            return false;\n        }\n        const shouldResolveHref = options2._h || options2._shouldResolveHref || pathNoQueryHash(url2) === pathNoQueryHash(as3);\n        // for static pages with query params in the URL we delay\n        // marking the router ready until after the query is updated\n        if (options2._h) {\n            this.isReady = true;\n        }\n        const prevLocale = this.locale;\n        if (false) { var ref; }\n        if (!options2._h) {\n            this.isSsr = false;\n        }\n        // marking route changes as a navigation start entry\n        if (_utils.ST) {\n            performance.mark('routeChange');\n        }\n        const { shallow =false  } = options2;\n        const routeProps = {\n            shallow\n        };\n        if (this._inFlightRoute) {\n            this.abortComponentLoad(this._inFlightRoute, routeProps);\n        }\n        as3 = addBasePath(addLocale(hasBasePath(as3) ? delBasePath(as3) : as3, options2.locale, this.defaultLocale));\n        const cleanedAs = delLocale(hasBasePath(as3) ? delBasePath(as3) : as3, this.locale);\n        this._inFlightRoute = as3;\n        let localeChange = prevLocale !== this.locale;\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options2._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n            this.asPath = cleanedAs;\n            Router.events.emit('hashChangeStart', as3, routeProps);\n            // TODO: do we need the resolved href when only a hash change?\n            this.changeState(method, url2, as3, options2);\n            this.scrollToHash(cleanedAs);\n            this.notify(this.components[this.route], null);\n            Router.events.emit('hashChangeComplete', as3, routeProps);\n            return true;\n        }\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url2);\n        let { pathname , query  } = parsed;\n        // The build manifest needs to be loaded before auto-static dynamic pages\n        // get their query parameters to allow ensuring they can be parsed properly\n        // when rewritten to\n        let pages, rewrites;\n        try {\n            [pages, { __rewrites: rewrites  }] = await Promise.all([\n                this.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest(),\n                this.pageLoader.getMiddlewareList(), \n            ]);\n        } catch (err) {\n            // If we fail to resolve the page list or client-build manifest, we must\n            // do a server-side transition:\n            window.location.href = as3;\n            return false;\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!this.urlIsNew(cleanedAs) && !localeChange) {\n            method = 'replaceState';\n        }\n        // we need to resolve the as value using rewrites for dynamic SSG\n        // pages to allow building the data URL correctly\n        let resolvedAs = as3;\n        // url and as should always be prefixed with basePath by this\n        // point by either next/link or router.push/replace so strip the\n        // basePath from the pathname to match the pages dir 1-to-1\n        pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n        if (shouldResolveHref && pathname !== '/_error') {\n            options2._shouldResolveHref = true;\n            if (false) {} else {\n                parsed.pathname = resolveDynamicRoute(pathname, pages);\n                if (parsed.pathname !== pathname) {\n                    pathname = parsed.pathname;\n                    parsed.pathname = addBasePath(pathname);\n                    url2 = (0, _utils).formatWithValidation(parsed);\n                }\n            }\n        }\n        if (!isLocalURL(as3)) {\n            if (true) {\n                throw new Error(`Invalid href: \"${url2}\" and as: \"${as3}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n            }\n            window.location.href = as3;\n            return false;\n        }\n        resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n        const effect = await this._preflightRequest({\n            as: as3,\n            cache: 'development' === 'production',\n            pages,\n            pathname,\n            query\n        });\n        if (effect.type === 'rewrite') {\n            query = {\n                ...query,\n                ...effect.parsedAs.query\n            };\n            resolvedAs = effect.asPath;\n            pathname = effect.resolvedHref;\n            parsed.pathname = effect.resolvedHref;\n            url2 = (0, _utils).formatWithValidation(parsed);\n        } else if (effect.type === 'redirect' && effect.newAs) {\n            return this.change(method, effect.newUrl, effect.newAs, options2);\n        } else if (effect.type === 'redirect' && effect.destination) {\n            window.location.href = effect.destination;\n            return new Promise(()=>{\n            });\n        } else if (effect.type === 'refresh') {\n            window.location.href = as3;\n            return new Promise(()=>{\n            });\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        if ((0, _isDynamic).isDynamicRoute(route)) {\n            const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n            const asPathname = parsedAs.pathname;\n            const routeRegex = (0, _routeRegex).getRouteRegex(route);\n            const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n            const shouldInterpolate = route === asPathname;\n            const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {\n            };\n            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param]\n                );\n                if (missingParams.length > 0) {\n                    if (true) {\n                        console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n                    }\n                    throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url2}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);\n                }\n            } else if (shouldInterpolate) {\n                as3 = (0, _utils).formatWithValidation(Object.assign({\n                }, parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                }));\n            } else {\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n        }\n        Router.events.emit('routeChangeStart', as3, routeProps);\n        try {\n            var ref, ref1;\n            let routeInfo = await this.getRouteInfo(route, pathname, query, as3, resolvedAs, routeProps);\n            let { error , props , __N_SSG , __N_SSP  } = routeInfo;\n            // handle redirect on client-transition\n            if ((__N_SSG || __N_SSP) && props) {\n                if (props.pageProps && props.pageProps.__N_REDIRECT) {\n                    const destination = props.pageProps.__N_REDIRECT;\n                    // check if destination is internal (resolves to a page) and attempt\n                    // client-navigation if it is falling back to hard navigation if\n                    // it's not\n                    if (destination.startsWith('/') && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                        const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                        const { url: newUrl , as: newAs  } = prepareUrlAs(this, destination, destination);\n                        return this.change(method, newUrl, newAs, options2);\n                    }\n                    window.location.href = destination;\n                    return new Promise(()=>{\n                    });\n                }\n                this.isPreview = !!props.__N_PREVIEW;\n                // handle SSG data 404\n                if (props.notFound === SSG_DATA_NOT_FOUND) {\n                    let notFoundRoute;\n                    try {\n                        await this.fetchComponent('/404');\n                        notFoundRoute = '/404';\n                    } catch (_) {\n                        notFoundRoute = '/_error';\n                    }\n                    routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as3, resolvedAs, {\n                        shallow: false\n                    });\n                }\n            }\n            Router.events.emit('beforeHistoryChange', as3, routeProps);\n            this.changeState(method, url2, as3, options2);\n            if (options2._h && pathname === '/_error' && ((ref = self.__NEXT_DATA__.props) === null || ref === void 0 ? void 0 : (ref1 = ref.pageProps) === null || ref1 === void 0 ? void 0 : ref1.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n                // ensure statusCode is still correct for static 500 page\n                // when updating query information\n                props.pageProps.statusCode = 500;\n            }\n            // shallow routing is only allowed for same page URL changes.\n            const isValidShallowRoute = options2.shallow && this.route === route;\n            var _scroll;\n            const shouldScroll = (_scroll = options2.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n            const resetScroll = shouldScroll ? {\n                x: 0,\n                y: 0\n            } : null;\n            await this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch((e)=>{\n                if (e.cancelled) error = error || e;\n                else throw e;\n            });\n            if (error) {\n                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n                throw error;\n            }\n            if (false) {}\n            Router.events.emit('routeChangeComplete', as3, routeProps);\n            return true;\n        } catch (err1) {\n            if ((0, _isError).default(err1) && err1.cancelled) {\n                return false;\n            }\n            throw err1;\n        }\n    }\n    changeState(method1, url3, as4, options3 = {\n    }) {\n        if (true) {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method1] === 'undefined') {\n                console.error(`Warning: window.history.${method1} is not available`);\n                return;\n            }\n        }\n        if (method1 !== 'pushState' || (0, _utils).getURL() !== as4) {\n            this._shallow = options3.shallow;\n            window.history[method1]({\n                url: url3,\n                as: as4,\n                options: options3,\n                __N: true,\n                idx: this._idx = method1 !== 'pushState' ? this._idx : this._idx + 1\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            '', as4);\n        }\n    }\n    async handleRouteInfoError(err1, pathname, query, as5, routeProps, loadErrorFail) {\n        if (err1.cancelled) {\n            // bubble up cancellation errors\n            throw err1;\n        }\n        if ((0, _routeLoader).isAssetError(err1) || loadErrorFail) {\n            Router.events.emit('routeChangeError', err1, as5, routeProps);\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as5;\n            // Changing the URL doesn't block executing the current code path.\n            // So let's throw a cancellation error stop the routing logic.\n            throw buildCancellationError();\n        }\n        try {\n            let Component;\n            let styleSheets;\n            let props;\n            if (typeof Component === 'undefined' || typeof styleSheets === 'undefined') {\n                ({ page: Component , styleSheets  } = await this.fetchComponent('/_error'));\n            }\n            const routeInfo = {\n                props,\n                Component,\n                styleSheets,\n                err: err1,\n                error: err1\n            };\n            if (!routeInfo.props) {\n                try {\n                    routeInfo.props = await this.getInitialProps(Component, {\n                        err: err1,\n                        pathname,\n                        query\n                    });\n                } catch (gipErr) {\n                    console.error('Error in error page `getInitialProps`: ', gipErr);\n                    routeInfo.props = {\n                    };\n                }\n            }\n            return routeInfo;\n        } catch (routeInfoErr) {\n            return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as5, routeProps, true);\n        }\n    }\n    async getRouteInfo(route, pathname2, query2, as6, resolvedAs, routeProps1) {\n        try {\n            const existingRouteInfo = this.components[route];\n            if (routeProps1.shallow && existingRouteInfo && this.route === route) {\n                return existingRouteInfo;\n            }\n            let cachedRouteInfo = undefined;\n            // can only use non-initial route info\n            // cannot reuse route info in development since it can change after HMR\n            if (false) {}\n            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP,\n                    __N_RSC: !!res.page.__next_rsc__\n                })\n            );\n            const { Component , __N_SSG , __N_SSP , __N_RSC  } = routeInfo;\n            if (true) {\n                const { isValidElementType  } = __webpack_require__(/*! react-is */ \"react-is\");\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname2}\"`);\n                }\n            }\n            let dataHref;\n            if (__N_SSG || __N_SSP || __N_RSC) {\n                dataHref = this.pageLoader.getDataHref({\n                    href: (0, _utils).formatWithValidation({\n                        pathname: pathname2,\n                        query: query2\n                    }),\n                    asPath: resolvedAs,\n                    ssg: __N_SSG,\n                    rsc: __N_RSC,\n                    locale: this.locale\n                });\n            }\n            const props = await this._getData(()=>__N_SSG || __N_SSP ? fetchNextData(dataHref, this.isSsr, false, __N_SSG ? this.sdc : this.sdr, !!__N_SSG) : this.getInitialProps(Component, {\n                    pathname: pathname2,\n                    query: query2,\n                    asPath: as6,\n                    locale: this.locale,\n                    locales: this.locales,\n                    defaultLocale: this.defaultLocale\n                })\n            );\n            if (__N_RSC) {\n                const { fresh , data  } = await this._getData(()=>this._getFlightData(dataHref)\n                );\n                props.pageProps = Object.assign(props.pageProps, {\n                    __flight_serialized__: data,\n                    __flight_fresh__: fresh\n                });\n            }\n            routeInfo.props = props;\n            this.components[route] = routeInfo;\n            return routeInfo;\n        } catch (err) {\n            return this.handleRouteInfoError((0, _isError).default(err) ? err : new Error(err + ''), pathname2, query2, as6, routeProps1);\n        }\n    }\n    set(route1, pathname3, query3, as7, data1, resetScroll) {\n        this.isFallback = false;\n        this.route = route1;\n        this.pathname = pathname3;\n        this.query = query3;\n        this.asPath = as7;\n        return this.notify(data1, resetScroll);\n    }\n    /**\r\n   * Callback to execute before replacing router state\r\n   * @param cb callback to be executed\r\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as8) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as8.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as9) {\n        const [, hash] = as9.split('#');\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === '' || hash === 'top') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\r\n   * Prefetch page code, you may wait for the data during page rendering.\r\n   * This feature only works in production!\r\n   * @param url the href of prefetched page\r\n   * @param asPath the as path of the prefetched page\r\n   */ async prefetch(url4, asPath1 = url4, options4 = {\n    }) {\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url4);\n        let { pathname , query  } = parsed;\n        if (false) {}\n        const pages = await this.pageLoader.getPageList();\n        let resolvedAs = asPath1;\n        if (false) {} else {\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                url4 = (0, _utils).formatWithValidation(parsed);\n            }\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (true) {\n            return;\n        }\n        const effects = await this._preflightRequest({\n            as: asPath1,\n            cache: true,\n            pages,\n            pathname,\n            query\n        });\n        if (effects.type === 'rewrite') {\n            parsed.pathname = effects.resolvedHref;\n            pathname = effects.resolvedHref;\n            query = {\n                ...query,\n                ...effects.parsedAs.query\n            };\n            resolvedAs = effects.asPath;\n            url4 = (0, _utils).formatWithValidation(parsed);\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        await Promise.all([\n            this.pageLoader._isSsg(route).then((isSsg)=>{\n                return isSsg ? fetchNextData(this.pageLoader.getDataHref({\n                    href: url4,\n                    asPath: resolvedAs,\n                    ssg: true,\n                    locale: typeof options4.locale !== 'undefined' ? options4.locale : this.locale\n                }), false, false, this.sdc, true) : false;\n            }),\n            this.pageLoader[options4.priority ? 'loadPage' : 'prefetch'](route), \n        ]);\n    }\n    async fetchComponent(route2) {\n        let cancelled = false;\n        const cancel = this.clc = ()=>{\n            cancelled = true;\n        };\n        const handleCancelled = ()=>{\n            if (cancelled) {\n                const error = new Error(`Abort fetching component for route: \"${route2}\"`);\n                error.cancelled = true;\n                throw error;\n            }\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n        };\n        try {\n            const componentResult = await this.pageLoader.loadPage(route2);\n            handleCancelled();\n            return componentResult;\n        } catch (err) {\n            handleCancelled();\n            throw err;\n        }\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        const { href: cacheKey  } = new URL(dataHref, window.location.href);\n        if (!this.isPreview && this.sdc[cacheKey]) {\n            return Promise.resolve({\n                fresh: false,\n                data: this.sdc[cacheKey]\n            });\n        }\n        return fetchNextData(dataHref, true, true, this.sdc, false).then((serialized)=>{\n            this.sdc[cacheKey] = serialized;\n            return {\n                fresh: true,\n                data: serialized\n            };\n        });\n    }\n    async _preflightRequest(options5) {\n        var ref;\n        const cleanedAs = delLocale(hasBasePath(options5.as) ? delBasePath(options5.as) : options5.as, this.locale);\n        const fns = await this.pageLoader.getMiddlewareList();\n        const requiresPreflight = fns.some(([middleware, isSSR])=>{\n            return (0, _routeMatcher).getRouteMatcher((0, _getMiddlewareRegex).getMiddlewareRegex(middleware, !isSSR))(cleanedAs);\n        });\n        if (!requiresPreflight) {\n            return {\n                type: 'next'\n            };\n        }\n        const preflight = await this._getPreflightData({\n            preflightHref: options5.as,\n            shouldCache: options5.cache\n        });\n        if ((ref = preflight.rewrite) === null || ref === void 0 ? void 0 : ref.startsWith('/')) {\n            const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n            const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n            let matchedPage;\n            let resolvedHref;\n            if (options5.pages.includes(fsPathname)) {\n                matchedPage = true;\n                resolvedHref = fsPathname;\n            } else {\n                resolvedHref = resolveDynamicRoute(fsPathname, options5.pages);\n                if (resolvedHref !== parsed.pathname && options5.pages.includes(resolvedHref)) {\n                    matchedPage = true;\n                }\n            }\n            return {\n                type: 'rewrite',\n                asPath: parsed.pathname,\n                parsedAs: parsed,\n                matchedPage,\n                resolvedHref\n            };\n        }\n        if (preflight.redirect) {\n            if (preflight.redirect.startsWith('/')) {\n                const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n                const { url: newUrl , as: newAs  } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n                return {\n                    type: 'redirect',\n                    newUrl,\n                    newAs\n                };\n            }\n            return {\n                type: 'redirect',\n                destination: preflight.redirect\n            };\n        }\n        // For SSR requests, they will be handled like normal pages.\n        if (preflight.refresh && !preflight.ssr) {\n            return {\n                type: 'refresh'\n            };\n        }\n        return {\n            type: 'next'\n        };\n    }\n    _getPreflightData(params) {\n        const { preflightHref , shouldCache =false  } = params;\n        const { href: cacheKey  } = new URL(preflightHref, window.location.href);\n        if (false) {}\n        return fetch(preflightHref, {\n            method: 'HEAD',\n            credentials: 'same-origin',\n            headers: {\n                'x-middleware-preflight': '1'\n            }\n        }).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to preflight request`);\n            }\n            return {\n                redirect: res.headers.get('Location'),\n                refresh: res.headers.has('x-middleware-refresh'),\n                rewrite: res.headers.get('x-middleware-rewrite'),\n                ssr: !!res.headers.get('x-middleware-ssr')\n            };\n        }).then((data)=>{\n            if (shouldCache) {\n                this.sde[cacheKey] = data;\n            }\n            return data;\n        }).catch((err)=>{\n            delete this.sde[cacheKey];\n            throw err;\n        });\n    }\n    getInitialProps(Component1, ctx) {\n        const { Component: App  } = this.components['/_app'];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component: Component1,\n            router: this,\n            ctx\n        });\n    }\n    abortComponentLoad(as10, routeProps2) {\n        if (this.clc) {\n            Router.events.emit('routeChangeError', buildCancellationError(), as10, routeProps2);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data, resetScroll1) {\n        return this.sub(data, this.components['/_app'].Component, resetScroll1);\n    }\n}\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router; //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_sidebar_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/sidebar.scss */ \"./styles/sidebar.scss\");\n/* harmony import */ var _styles_sidebar_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_sidebar_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_globals_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.scss */ \"./styles/globals.scss\");\n/* harmony import */ var _styles_globals_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../provider */ \"./provider/index.ts\");\n\n\n\n\n\n\n// import Appbar from \"../components/Appbar\";\n// import Sidebar from \"../components/Sidebar\";\nfunction MyApp({ Component , pageProps  }) {\n    // const active = () => {};\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_4__.Provider, {\n        store: _provider__WEBPACK_IMPORTED_MODULE_5__.store,\n        __source: {\n            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n            lineNumber: 16\n        },\n        __self: this,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            className: \"wrap\",\n            __source: {\n                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                lineNumber: 17\n            },\n            __self: this,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"nav\", {\n                    className: \"nav-bar\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                        lineNumber: 21\n                    },\n                    __self: this,\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        className: \"sidebar\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                            lineNumber: 22\n                        },\n                        __self: this,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                className: \"logo_content\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                    lineNumber: 23\n                                },\n                                __self: this,\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                    className: \"logo\",\n                                    __source: {\n                                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                        lineNumber: 24\n                                    },\n                                    __self: this,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                            className: \"bi bi-tools\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 25\n                                            },\n                                            __self: this\n                                        }),\n                                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                            className: \"logo_name\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 26\n                                            },\n                                            __self: this,\n                                            children: \"DouJo\"\n                                        })\n                                    ]\n                                })\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"ul\", {\n                                className: \"nav_list\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                    lineNumber: 29\n                                },\n                                __self: this,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 30\n                                        },\n                                        __self: this,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                className: \"bi bi-search\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 31\n                                                },\n                                                __self: this\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                                type: \"text\",\n                                                placeholder: \"Search...\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 32\n                                                },\n                                                __self: this\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 34\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                            href: \"/\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 35\n                                            },\n                                            __self: this,\n                                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n                                                href: \"/\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 36\n                                                },\n                                                __self: this,\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                        className: \"bi bi-house-door\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 37\n                                                        },\n                                                        __self: this\n                                                    }),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                                        className: \"links_name\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 38\n                                                        },\n                                                        __self: this,\n                                                        children: \"Home\"\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 42\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                            href: \"/feed\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 43\n                                            },\n                                            __self: this,\n                                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n                                                href: \"/feed\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 44\n                                                },\n                                                __self: this,\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                        className: \"bi bi-bell\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 45\n                                                        },\n                                                        __self: this\n                                                    }),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                                        className: \"links_name\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 46\n                                                        },\n                                                        __self: this,\n                                                        children: \"Feed\"\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 50\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                            href: \"/project\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 51\n                                            },\n                                            __self: this,\n                                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n                                                href: \"/project\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 52\n                                                },\n                                                __self: this,\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                        className: \"bi bi-file-text\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 53\n                                                        },\n                                                        __self: this\n                                                    }),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                                        className: \"links_name\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 54\n                                                        },\n                                                        __self: this,\n                                                        children: \"Project\"\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 58\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                            href: \"/board\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 59\n                                            },\n                                            __self: this,\n                                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n                                                href: \"/board\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 60\n                                                },\n                                                __self: this,\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                        className: \"bi bi-kanban\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 61\n                                                        },\n                                                        __self: this\n                                                    }),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                                        className: \"links_name\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 62\n                                                        },\n                                                        __self: this,\n                                                        children: \"TaskBoard\"\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 66\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                            href: \"/wiki\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 67\n                                            },\n                                            __self: this,\n                                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n                                                href: \"/wiki\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                    lineNumber: 68\n                                                },\n                                                __self: this,\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                        className: \"bi bi-file-ruled\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 69\n                                                        },\n                                                        __self: this\n                                                    }),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                                        className: \"links_name\",\n                                                        __source: {\n                                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                            lineNumber: 70\n                                                        },\n                                                        __self: this,\n                                                        children: \"Wiki\"\n                                                    })\n                                                ]\n                                            })\n                                        })\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                className: \"profile_content\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                    lineNumber: 88\n                                },\n                                __self: this,\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                    className: \"profile\",\n                                    __source: {\n                                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                        lineNumber: 89\n                                    },\n                                    __self: this,\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                        className: \"profile_details\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                            lineNumber: 90\n                                        },\n                                        __self: this,\n                                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                            className: \"name_job\",\n                                            __source: {\n                                                fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                lineNumber: 91\n                                            },\n                                            __self: this,\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                                    className: \"name\",\n                                                    __source: {\n                                                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                        lineNumber: 92\n                                                    },\n                                                    __self: this,\n                                                    children: \"강윤석\"\n                                                }),\n                                                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                                    className: \"job\",\n                                                    __source: {\n                                                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                        lineNumber: 93\n                                                    },\n                                                    __self: this,\n                                                    children: \"Enginner\"\n                                                }),\n                                                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", {\n                                                    className: \"bi bi-box-arrow-right\",\n                                                    __source: {\n                                                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                                                        lineNumber: 94\n                                                    },\n                                                    __self: this\n                                                })\n                                            ]\n                                        })\n                                    })\n                                })\n                            })\n                        ]\n                    })\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"article\", {\n                    className: \"contents\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                        lineNumber: 101\n                    },\n                    __self: this,\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component, {\n                        ...pageProps,\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                            lineNumber: 102\n                        },\n                        __self: this\n                    })\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"footer\", {\n                    className: \"footer\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Dou_jo\\\\Dou_Jo\\\\front_end\\\\pages\\\\_app.tsx\",\n                        lineNumber: 104\n                    },\n                    __self: this\n                })\n            ]\n        })\n    }));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp); // export const getServerSideProps: GetServerSideProps = async ({ query }) => {\n //   resetServerContext(); // <-- CALL RESET SERVER CONTEXT, SERVER SIDE\n //   return { props: { data: [] } };\n // };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./provider/index.ts":
/*!***************************!*\
  !*** ./provider/index.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"store\": () => (/* binding */ store)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _redux_saga_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @redux-saga/core */ \"@redux-saga/core\");\n/* harmony import */ var _redux_saga_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_redux_saga_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _modules_taskModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/taskModal */ \"./provider/modules/taskModal.ts\");\n/* harmony import */ var _modules_status__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/status */ \"./provider/modules/status.ts\");\n/* harmony import */ var _modules_project__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/project */ \"./provider/modules/project.ts\");\n/* harmony import */ var _middleware_modules_project__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../middleware/modules/project */ \"./middleware/modules/project.ts\");\n\n// 최상위 사가\n// import rootSaga from \"../middleware\";\n\n// import taskReducer from \"./modules/task\";\n\n\n\n\n// saga middleware 생성\n// middleware: 중간에 뭔가를 처리하는 소프트웨어\n// redux saga는 redux 상태처리 전/후에 뭔가를 해주는 라이브러리\nconst sagaMiddleware = _redux_saga_core__WEBPACK_IMPORTED_MODULE_1___default()();\n// global state(전역 상태) 저장소 만듦\n// global state: profile, todo, contact .... 여러개 state가 있음\n// ** 이러한 state들은 다른 컴포넌트와 state가 공유 됨\nconst store = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.configureStore)({\n    // 각 state별로 처리할 reducer 목록\n    reducer: {\n        // state이름: reducer이름\n        // task: taskReducer,\n        taskModal: _modules_taskModal__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        status: _modules_status__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        project: _modules_project__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n    },\n    // redux store(dispatcher)에 미들웨어 적용\n    // middleware는 여러개 사용할 수 있음, [defaultMiddlware, sagaMiddleware, thunkMiddlware]\n    middleware: [\n        sagaMiddleware\n    ],\n    devTools: true\n});\n// Redux\n/*\r\n comp -> dispatch(reduxAction) \r\n   -> dispatcher -> reducer -> store/state\r\n*/ // Redux-Saga\n/*\r\n comp -> dispatch(sagaAction) \r\n   -> dispatcher -> saga -> api(서버연동) -> put(reduxAction) (추가단계)\r\n     -> dispatcher -> reducer -> store/state\r\n*/ // saga middleware를 실행\n// rootSaga와 하위에 정의한 감지(take)할 Saga Action들에 대해서 감지 시작\nsagaMiddleware.run(_middleware_modules_project__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wcm92aWRlci9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBaUQ7QUFDakQsRUFBUztBQUNDLEVBQThCO0FBQ1c7QUFDbkQsRUFBNEM7QUFDTTtBQUNOO0FBQ0U7QUFDTTtBQUNwRCxFQUFxQjtBQUNqQixFQUE2QjtBQUNILEVBQWM7QUFDTixLQUFqQyxDQUFDTSxjQUFjLEdBQUdMLHVEQUFvQjtBQUUzQyxFQUE2QjtBQUNYLEVBQXdDO0FBQzlDLEVBQTBCO0FBQy9CLEtBQUssQ0FBQ00sS0FBSyxHQUFHUCxnRUFBYyxDQUFDLENBQUM7SUFDbkMsRUFBMkI7SUFDWFEsT0FBVCxFQUFFLENBQUM7UUFDUixFQUFxQjtRQUNiLEVBQWE7UUFDckJDLFNBQVMsRUFBRVAsMERBQWdCO1FBQzNCUSxNQUFNLEVBQUVQLHVEQUFhO1FBQ3JCUSxPQUFPLEVBQUVQLHdEQUFjO0lBQ3pCLENBQUM7SUFDRCxFQUFtQztJQUNyQixFQUFpRTtJQUMzRFEsVUFBVixFQUFFLENBQUNOO1FBQUFBLGNBQWM7SUFBQSxDQUFDO0lBQzVCTyxRQUFRLEVBQUUsSUFBSTtBQUNoQixDQUFDO0FBRUQsRUFBUTtBQUNSLEVBR0U7QUFHRixFQUlFO0FBR0ksRUFBZ0Q7QUFDaEJQLGNBQXhCLENBQUNRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVhbXByb2plY3QvLi9wcm92aWRlci9pbmRleC50cz9iNTdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuLy8g7LWc7IOB7JyEIOyCrOqwgFxyXG4vLyBpbXBvcnQgcm9vdFNhZ2EgZnJvbSBcIi4uL21pZGRsZXdhcmVcIjtcclxuaW1wb3J0IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlIGZyb20gXCJAcmVkdXgtc2FnYS9jb3JlXCI7XHJcbi8vIGltcG9ydCB0YXNrUmVkdWNlciBmcm9tIFwiLi9tb2R1bGVzL3Rhc2tcIjtcclxuaW1wb3J0IHRhc2tNb2RhbFJlZHVjZXIgZnJvbSBcIi4vbW9kdWxlcy90YXNrTW9kYWxcIjtcclxuaW1wb3J0IHN0YXR1c1JlZHVjZXIgZnJvbSBcIi4vbW9kdWxlcy9zdGF0dXNcIjtcclxuaW1wb3J0IHByb2plY3RSZWR1Y2VyIGZyb20gXCIuL21vZHVsZXMvcHJvamVjdFwiO1xyXG5pbXBvcnQgcm9vdFNhZ2EgZnJvbSBcIi4uL21pZGRsZXdhcmUvbW9kdWxlcy9wcm9qZWN0XCI7XHJcbi8vIHNhZ2EgbWlkZGxld2FyZSDsg53shLFcclxuLy8gbWlkZGxld2FyZTog7KSR6rCE7JeQIOutlOqwgOulvCDsspjrpqztlZjripQg7IaM7ZSE7Yq47Juo7Ja0XHJcbi8vIHJlZHV4IHNhZ2HripQgcmVkdXgg7IOB7YOc7LKY66asIOyghC/tm4Tsl5Ag662U6rCA66W8IO2VtOyjvOuKlCDrnbzsnbTruIzrn6zrpqxcclxuY29uc3Qgc2FnYU1pZGRsZXdhcmUgPSBjcmVhdGVTYWdhTWlkZGxld2FyZSgpO1xyXG5cclxuLy8gZ2xvYmFsIHN0YXRlKOyghOyXrSDsg4Htg5wpIOyggOyepeyGjCDrp4zrk6ZcclxuLy8gZ2xvYmFsIHN0YXRlOiBwcm9maWxlLCB0b2RvLCBjb250YWN0IC4uLi4g7Jes65+s6rCcIHN0YXRl6rCAIOyeiOydjFxyXG4vLyAqKiDsnbTrn6ztlZwgc3RhdGXrk6TsnYAg64uk66W4IOy7tO2PrOuEjO2KuOyZgCBzdGF0ZeqwgCDqs7XsnKAg65CoXHJcbmV4cG9ydCBjb25zdCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAvLyDqsIEgc3RhdGXrs4TroZwg7LKY66as7ZWgIHJlZHVjZXIg66qp66GdXHJcbiAgcmVkdWNlcjoge1xyXG4gICAgLy8gc3RhdGXsnbTrpoQ6IHJlZHVjZXLsnbTrpoRcclxuICAgIC8vIHRhc2s6IHRhc2tSZWR1Y2VyLFxyXG4gICAgdGFza01vZGFsOiB0YXNrTW9kYWxSZWR1Y2VyLFxyXG4gICAgc3RhdHVzOiBzdGF0dXNSZWR1Y2VyLFxyXG4gICAgcHJvamVjdDogcHJvamVjdFJlZHVjZXIsXHJcbiAgfSxcclxuICAvLyByZWR1eCBzdG9yZShkaXNwYXRjaGVyKeyXkCDrr7jrk6Tsm6jslrQg7KCB7JqpXHJcbiAgLy8gbWlkZGxld2FyZeuKlCDsl6zrn6zqsJwg7IKs7Jqp7ZWgIOyImCDsnojsnYwsIFtkZWZhdWx0TWlkZGx3YXJlLCBzYWdhTWlkZGxld2FyZSwgdGh1bmtNaWRkbHdhcmVdXHJcbiAgbWlkZGxld2FyZTogW3NhZ2FNaWRkbGV3YXJlXSxcclxuICBkZXZUb29sczogdHJ1ZSwgLy8g6rCc67Cc7Yi0IOyCrOyaqeyXrOu2gFxyXG59KTtcclxuXHJcbi8vIFJlZHV4XHJcbi8qXHJcbiBjb21wIC0+IGRpc3BhdGNoKHJlZHV4QWN0aW9uKSBcclxuICAgLT4gZGlzcGF0Y2hlciAtPiByZWR1Y2VyIC0+IHN0b3JlL3N0YXRlXHJcbiovXHJcblxyXG4vLyBSZWR1eC1TYWdhXHJcbi8qXHJcbiBjb21wIC0+IGRpc3BhdGNoKHNhZ2FBY3Rpb24pIFxyXG4gICAtPiBkaXNwYXRjaGVyIC0+IHNhZ2EgLT4gYXBpKOyEnOuyhOyXsOuPmSkgLT4gcHV0KHJlZHV4QWN0aW9uKSAo7LaU6rCA64uo6rOEKVxyXG4gICAgIC0+IGRpc3BhdGNoZXIgLT4gcmVkdWNlciAtPiBzdG9yZS9zdGF0ZVxyXG4qL1xyXG5cclxuLy8gc2FnYSBtaWRkbGV3YXJl66W8IOyLpO2WiVxyXG4vLyByb290U2FnYeyZgCDtlZjsnITsl5Ag7KCV7J2Y7ZWcIOqwkOyngCh0YWtlKe2VoCBTYWdhIEFjdGlvbuuTpOyXkCDrjIDtlbTshJwg6rCQ7KeAIOyLnOyekVxyXG5zYWdhTWlkZGxld2FyZS5ydW4ocm9vdFNhZ2EpO1xyXG5cclxuLy8gdHlwZXNjaXBydOyXkOyEnOuKlCDrqofqsIDsp4Ag7YOA7J6FIOyEoOyWuOydhCDtlbTslbztlahcclxuXHJcbi8vIHJvb3Qgc3RhdGUg7YOA7J6FIOygleydmFxyXG4vLyDqsIDsnqUg7Leo7IOB7JyEIHN0YXRlXHJcbi8vIHN0YXRlLnByb2ZpbGUsIHN0YXRlLmNvbnRhY3QuLi4uLlxyXG5leHBvcnQgdHlwZSBSb290U3RhdGUgPSBSZXR1cm5UeXBlPHR5cGVvZiBzdG9yZS5nZXRTdGF0ZT47XHJcblxyXG4vLyBkaXNwYXRjaCDtg4DsnoUg7KCV7J2YXHJcbi8vIGRpc3BhdGNoIO2VqOyImOydmCBnZW5lcmljIHR5cGVcclxuZXhwb3J0IHR5cGUgQXBwRGlzcGF0Y2ggPSB0eXBlb2Ygc3RvcmUuZGlzcGF0Y2g7XHJcbiJdLCJuYW1lcyI6WyJjb25maWd1cmVTdG9yZSIsImNyZWF0ZVNhZ2FNaWRkbGV3YXJlIiwidGFza01vZGFsUmVkdWNlciIsInN0YXR1c1JlZHVjZXIiLCJwcm9qZWN0UmVkdWNlciIsInJvb3RTYWdhIiwic2FnYU1pZGRsZXdhcmUiLCJzdG9yZSIsInJlZHVjZXIiLCJ0YXNrTW9kYWwiLCJzdGF0dXMiLCJwcm9qZWN0IiwibWlkZGxld2FyZSIsImRldlRvb2xzIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./provider/index.ts\n");

/***/ }),

/***/ "./provider/modules/project.ts":
/*!*************************************!*\
  !*** ./provider/modules/project.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addProject\": () => (/* binding */ addProject),\n/* harmony export */   \"removeProject\": () => (/* binding */ removeProject),\n/* harmony export */   \"modifyProject\": () => (/* binding */ modifyProject),\n/* harmony export */   \"addMilestone\": () => (/* binding */ addMilestone),\n/* harmony export */   \"removeMilestone\": () => (/* binding */ removeMilestone),\n/* harmony export */   \"modifyMilestone\": () => (/* binding */ modifyMilestone),\n/* harmony export */   \"initialMilestoneItem\": () => (/* binding */ initialMilestoneItem),\n/* harmony export */   \"initialMilestone\": () => (/* binding */ initialMilestone),\n/* harmony export */   \"initialProjectItem\": () => (/* binding */ initialProjectItem),\n/* harmony export */   \"initialProject\": () => (/* binding */ initialProject),\n/* harmony export */   \"initialCompleted\": () => (/* binding */ initialCompleted),\n/* harmony export */   \"addTotalpages\": () => (/* binding */ addTotalpages),\n/* harmony export */   \"initialPagedProject\": () => (/* binding */ initialPagedProject),\n/* harmony export */   \"initialNextProject\": () => (/* binding */ initialNextProject),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n\n// const photoPageSize = localStorage.getItem(\"photo_page_size\");\n// photo state를 목록 -> array\nconst initialState = {\n    data: [\n        {\n            id: 5,\n            projectname: \"협업툴 만들기5\",\n            milestone: [\n                {\n                    id: 1,\n                    name: \"drag&drop\",\n                    startdate: \"2021-11-01\",\n                    enddate: \"2021-11-30\",\n                    projectId: 5\n                },\n                {\n                    id: 2,\n                    name: \"drag&drop2\",\n                    startdate: \"2021-11-03\",\n                    enddate: \"2021-12-30\",\n                    projectId: 5\n                },\n                {\n                    id: 3,\n                    name: \"drag&drop3\",\n                    startdate: \"2021-11-02\",\n                    enddate: \"2021-12-01\",\n                    projectId: 5\n                }, \n            ],\n            startdate: \"2021-11-01\",\n            enddate: \"2021-11-30\",\n            manager: \"강윤석\",\n            engineer: \"강윤석\",\n            memo: \"작업중\"\n        },\n        {\n            id: 4,\n            projectname: \"협업툴 만들기4\",\n            milestone: [\n                {\n                    id: 1,\n                    projectId: 4,\n                    name: \"메인화면\",\n                    startdate: \"2021-11-01\",\n                    enddate: \"2021-11-30\"\n                },\n                {\n                    id: 2,\n                    name: \"메인화면1\",\n                    startdate: \"2021-11-03\",\n                    enddate: \"2021-12-30\",\n                    projectId: 4\n                },\n                {\n                    id: 3,\n                    name: \"메인화면2\",\n                    startdate: \"2021-11-02\",\n                    enddate: \"2021-12-01\",\n                    projectId: 4\n                }, \n            ],\n            startdate: \"2021-11-01\",\n            enddate: \"2021-11-30\",\n            manager: \"강윤석\",\n            engineer: \"허준\",\n            memo: \"작업중\"\n        },\n        {\n            id: 3,\n            projectname: \"협업툴 만들기3\",\n            milestone: [\n                {\n                    id: 1,\n                    projectId: 3,\n                    name: \"project제작\",\n                    startdate: \"2021-11-01\",\n                    enddate: \"2021-11-30\"\n                },\n                {\n                    id: 2,\n                    name: \"project제작1\",\n                    startdate: \"2021-11-03\",\n                    enddate: \"2021-12-30\",\n                    projectId: 3\n                },\n                {\n                    id: 3,\n                    name: \"project제작2\",\n                    startdate: \"2021-11-02\",\n                    enddate: \"2021-12-01\",\n                    projectId: 3\n                }, \n            ],\n            startdate: \"2021-11-01\",\n            enddate: \"2021-11-30\",\n            manager: \"허준\",\n            engineer: \"허준\",\n            memo: \"작업중\"\n        },\n        {\n            id: 2,\n            projectname: \"협업툴 만들기2\",\n            milestone: [\n                {\n                    id: 1,\n                    projectId: 2,\n                    name: \"wiki제작\",\n                    startdate: \"2021-11-01\",\n                    enddate: \"2021-11-30\"\n                },\n                {\n                    id: 2,\n                    name: \"wiki제작1\",\n                    startdate: \"2021-11-03\",\n                    enddate: \"2021-12-30\",\n                    projectId: 2\n                },\n                {\n                    id: 3,\n                    name: \"wiki제작2\",\n                    startdate: \"2021-11-02\",\n                    enddate: \"2021-12-01\",\n                    projectId: 2\n                }, \n            ],\n            startdate: \"2021-11-01\",\n            enddate: \"2021-11-30\",\n            manager: \"이준희\",\n            engineer: \"이준희\",\n            memo: \"작업중\"\n        },\n        {\n            id: 1,\n            projectname: \"협업툴 만들기1\",\n            milestone: [\n                {\n                    id: 1,\n                    projectId: 1,\n                    name: \"borad제작\",\n                    startdate: \"2021-11-01\",\n                    enddate: \"2021-11-30\"\n                },\n                {\n                    id: 2,\n                    name: \"borad제작1\",\n                    startdate: \"2021-11-03\",\n                    enddate: \"2021-12-30\",\n                    projectId: 1\n                },\n                {\n                    id: 3,\n                    name: \"borad제작2\",\n                    startdate: \"2021-11-02\",\n                    enddate: \"2021-12-01\",\n                    projectId: 1\n                }, \n            ],\n            startdate: \"2021-11-01\",\n            enddate: \"2021-11-30\",\n            manager: \"강윤석\",\n            engineer: \"강윤석\",\n            memo: \"작업중\"\n        }, \n    ],\n    isFetched: false,\n    page: 0,\n    // pageSize: photoPageSize ? +photoPageSize : 8,\n    pageSize: 8,\n    totalPages: 0\n};\nconst projectSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"project\",\n    initialState,\n    reducers: {\n        // PayloadAction<payload타입>\n        // payload로 item객체를 받음\n        addProject: (state, action)=>{\n            const project = action.payload;\n            console.log(\"--in reducer function--\");\n            console.log(project);\n            state.data.unshift(project);\n            state.isAddCompleted = true; // 추가가 되었음으로 표시\n        },\n        // payload 없는 reducer\n        // completed 관련된 속성을 삭제함(undefined 상태)\n        initialCompleted: (state)=>{\n            delete state.isAddCompleted;\n            delete state.isRemoveCompleted;\n            delete state.isModifyCompleted;\n        },\n        // payload로 id값을 받음\n        // action: PayloadAction<number>\n        // reducer 넘어오는 action은 payload있는 액션인데,\n        // payload의 타입이 number이다.\n        removeProject: (state, action)=>{\n            const id = action.payload;\n            // id에 해당하는 아이템의 index를 찾고 그 index로 splice를 한다.\n            state.data.splice(state.data.findIndex((item)=>item.id === id\n            ), 1);\n            state.isRemoveCompleted = true; // 삭제 되었음을 표시\n        },\n        modifyProject: (state, action)=>{\n            // 생성해서 넘긴 객체\n            const modifyItem = action.payload;\n            // state에 있는 객체\n            const projectItem = state.data.find((item)=>item.id === modifyItem.id\n            );\n            // state에 있는 객체의 속성을 넘김 객체의 속성으로 변경\n            if (projectItem) {\n                projectItem.projectname = modifyItem.projectname;\n                projectItem.startdate = modifyItem.startdate;\n                projectItem.enddate = modifyItem.enddate;\n                projectItem.manager = modifyItem.manager;\n                projectItem.engineer = modifyItem.engineer;\n                // projectItem.milestone = modifyItem.milestone;\n                projectItem.memo = modifyItem.memo;\n            }\n            state.isModifyCompleted = true; // 변경 되었음을 표시\n        },\n        initialProjectItem: (state, action)=>{\n            const project = action.payload;\n            // 백엔드에서 받아온 데이터\n            state.data = [\n                {\n                    ...project\n                }\n            ];\n        },\n        // payload값으로 state를 초기화하는 reducer 필요함\n        initialProject: (state, action)=>{\n            const projects = action.payload;\n            // 백엔드에서 받아온 데이터\n            state.data = projects;\n            // 데이터를 받아옴으로 값을 남김\n            state.isFetched = true;\n        },\n        addTotalpages: (state)=>{\n            state.totalPages++;\n        },\n        // payload값으로 state를 초기화하는 reducer 필요함\n        initialPagedProject: (state, action)=>{\n            // 백엔드에서 받아온 데이터\n            // 컨텐트\n            state.data = action.payload.data;\n            // 페이징 데이터\n            state.totalElements = action.payload.totalElements;\n            state.totalPages = action.payload.totalPages;\n            state.page = action.payload.page;\n            state.pageSize = action.payload.pageSize;\n            state.isLast = action.payload.isLast;\n            // 데이터를 받아옴으로 값을 남김\n            state.isFetched = true;\n        },\n        initialNextProject: (state, action)=>{\n            // 백엔드에서 받아온 데이터를 기존데이터 뒤로 합침\n            // 컨텐트\n            state.data = state.data.concat(action.payload.data);\n            // 페이징 데이터\n            state.totalElements = action.payload.totalElements;\n            state.totalPages = action.payload.totalPages;\n            state.page = action.payload.page;\n            state.pageSize = action.payload.pageSize;\n            state.isLast = action.payload.isLast;\n            // 데이터를 받아옴으로 값을 남김\n            state.isFetched = true;\n        },\n        addMilestone: (state, action)=>{\n            const milestone = action.payload;\n            console.log(\"--in reducer function--\");\n            const project = state.data.find((prj)=>prj.id === milestone.projectId\n            );\n            project.milestone.push(milestone);\n            state.isAddCompleted = true; // 추가가 되었음으로 표시\n        },\n        // initialCompleted2: (state) => {\n        //   delete state.isAddCompleted;\n        //   delete state.isRemoveCompleted;\n        //   delete state.isModifyCompleted;\n        // },\n        removeMilestone: (state, action)=>{\n            const milestoneId = action.payload.milestoneId;\n            const projectId = action.payload.projectId;\n            // id에 해당하는 아이템의 index를 찾고 그 index로 splice를 한다.\n            const findProject = state.data.find((item)=>item.id === projectId\n            );\n            const findMilestoneIndex = findProject === null || findProject === void 0 ? void 0 : findProject.milestone.findIndex((item)=>item.id === milestoneId\n            );\n            if (findMilestoneIndex) {\n                findProject === null || findProject === void 0 ? void 0 : findProject.milestone.splice(findMilestoneIndex, 1);\n            }\n            state.isRemoveCompleted = true; // 삭제 되었음을 표시\n        },\n        modifyMilestone: (state, action)=>{\n            // 생성해서 넘긴 객체\n            const modifyItem = action.payload;\n            // state에 있는 객체\n            const projectItem = state.data.find((item)=>item.id === modifyItem.projectId\n            );\n            const milestonItem = projectItem === null || projectItem === void 0 ? void 0 : projectItem.milestone.find((item)=>item.id === modifyItem.id\n            );\n            if (milestonItem) {\n                modifyItem.name = milestonItem.name, modifyItem.startdate = milestonItem.startdate, modifyItem.enddate = milestonItem.enddate;\n            }\n            state.isModifyCompleted = true; // 변경 되었음을 표시\n            console.log(\"completed\");\n        },\n        initialMilestoneItem: (state, action)=>{\n            const milestone = action.payload;\n            // 백엔드에서 받아온 데이터\n            state.data = [\n                {\n                    ...milestone\n                }\n            ];\n        },\n        initialMilestone: (state, action)=>{\n            const milestones = action.payload;\n            // 백엔드에서 받아온 데이터\n            state.data = milestones;\n            // 데이터를 받아옴으로 값을 남김\n            state.isFetched = true;\n        }\n    }\n});\n// action creator 내보내기: action creator는 action객체를 반환하는 함수\nconst { addProject , removeProject , modifyProject , addMilestone , removeMilestone , modifyMilestone , initialMilestoneItem , initialMilestone , initialProjectItem , initialProject , initialCompleted , addTotalpages , initialPagedProject , initialNextProject ,  } = projectSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (projectSlice.reducer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./provider/modules/project.ts\n");

/***/ }),

/***/ "./provider/modules/status.ts":
/*!************************************!*\
  !*** ./provider/modules/status.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addStatus\": () => (/* binding */ addStatus),\n/* harmony export */   \"addTask\": () => (/* binding */ addTask),\n/* harmony export */   \"modifyStatus\": () => (/* binding */ modifyStatus),\n/* harmony export */   \"modifyTask\": () => (/* binding */ modifyTask),\n/* harmony export */   \"dropTask\": () => (/* binding */ dropTask),\n/* harmony export */   \"removeStatus\": () => (/* binding */ removeStatus),\n/* harmony export */   \"removeTask\": () => (/* binding */ removeTask),\n/* harmony export */   \"initialStatus\": () => (/* binding */ initialStatus),\n/* harmony export */   \"initialCompleted\": () => (/* binding */ initialCompleted),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n\nconst initialState = {\n    data: [\n        {\n            id: 1,\n            name: \"Backlog\",\n            projectId: 1,\n            tasks: [\n                {\n                    id: 1,\n                    projectId: 1,\n                    milestoneId: 1,\n                    statusId: 1,\n                    reporterId: 1,\n                    summary: \"Go to work & cook krab-burgers\",\n                    description: \"Description for Test-Task-1\",\n                    estimatedTime: 1,\n                    // usageTime:\n                    priority: 1\n                },\n                {\n                    id: 6,\n                    projectId: 3,\n                    milestoneId: 3,\n                    statusId: 1,\n                    reporterId: 2,\n                    summary: \"Breath & sleep\",\n                    description: \"Description for Test-Task-1\",\n                    estimatedTime: 1,\n                    // usageTime:\n                    priority: 1\n                }, \n            ]\n        },\n        {\n            id: 2,\n            name: \"Selected\",\n            projectId: 1,\n            isEdit: false,\n            tasks: [\n                {\n                    id: 2,\n                    projectId: 2,\n                    milestoneId: 2,\n                    statusId: 2,\n                    reporterId: 3,\n                    summary: \"Counting money (just for fun)\",\n                    description: \"Description for Test-Task-2\",\n                    estimatedTime: 2,\n                    // usageTime:\n                    priority: 1\n                }, \n            ]\n        },\n        {\n            id: 3,\n            name: \"In progress\",\n            isEdit: false,\n            projectId: 1,\n            tasks: [\n                {\n                    id: 3,\n                    projectId: 4,\n                    milestoneId: 4,\n                    statusId: 3,\n                    reporterId: 4,\n                    summary: \"Defeat Koopa and save the princess\",\n                    description: \"Description for Test-Task-3\",\n                    estimatedTime: 3,\n                    // usageTime:\n                    priority: 1\n                }, \n            ]\n        },\n        {\n            id: 4,\n            name: \"Done\",\n            isEdit: false,\n            projectId: 1,\n            tasks: [\n                {\n                    id: 4,\n                    projectId: 4,\n                    milestoneId: 4,\n                    statusId: 4,\n                    reporterId: 5,\n                    summary: \"Help his brother_mario\",\n                    description: \"Description for Test-Task-33\",\n                    estimatedTime: 3,\n                    // usageTime: ,\n                    priority: 1\n                }, \n            ]\n        },\n        {\n            id: 5,\n            name: \"Bug\",\n            isEdit: false,\n            projectId: 1,\n            tasks: [\n                {\n                    id: 5,\n                    projectId: 5,\n                    milestoneId: 5,\n                    statusId: 5,\n                    reporterId: 6,\n                    summary: \"ALWAYS KIDNAPPED\",\n                    description: \"Description for Test-Task-3\",\n                    estimatedTime: 3,\n                    // usageTime: ,\n                    priority: 1\n                }, \n            ]\n        }, \n    ],\n    isFetched: false\n};\nconst statusSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"status\",\n    initialState,\n    reducers: {\n        // status\n        addStatus: (state, action)=>{\n            const status = action.payload;\n            state.data.push(status);\n            state.isAddCompleted = true;\n        },\n        modifyStatus: (state, action)=>{\n            const modifyItem = action.payload;\n            const statusItem = state.data.find((item)=>item.id == modifyItem.id\n            );\n            if (statusItem) {\n                statusItem.id = modifyItem.id;\n                statusItem.projectId = modifyItem.projectId;\n                statusItem.name = modifyItem.name;\n                statusItem.tasks = modifyItem.tasks;\n                statusItem.isEdit = modifyItem.isEdit;\n                statusItem.isDetail = modifyItem.isDetail;\n            }\n            state.isModifyCompleted = true;\n        },\n        // resetEditMode: (state) => {\n        //   state.data.forEach(\n        //     (item) => (item.isDetail = false && item.isEdit == false)\n        //   );\n        //   console.log(\"reset configs\");\n        // },\n        removeStatus: (state, action)=>{\n            const id = action.payload;\n            state.data.splice(state.data.findIndex((item)=>item.id == id\n            ), 1);\n            state.isRemoveCompleted = true;\n        },\n        initialStatus: (state, action)=>{\n            const statuss = action.payload; // 백엔드에서 받아온 status\n            state.data = statuss;\n            state.isFetched = true;\n        },\n        initialCompleted: (state)=>{\n            delete state.isAddCompleted;\n            delete state.isRemoveCompleted;\n            delete state.isModifyCompleted;\n        },\n        // task\n        addTask: (state, action)=>{\n            const taskItem = action.payload;\n            const parentStatus = state.data.find((item)=>item.id == taskItem.statusId\n            );\n            if (parentStatus) {\n                var ref;\n                (ref = parentStatus.tasks) === null || ref === void 0 ? void 0 : ref.unshift(taskItem);\n            }\n            console.log(taskItem);\n            state.isAddTaskCompleted = true;\n        },\n        modifyTask: (state, action)=>{\n            var ref;\n            const modifyItem = action.payload;\n            const parentStatus = state.data.find((item)=>item.id == modifyItem.statusId\n            );\n            const taskItem = parentStatus === null || parentStatus === void 0 ? void 0 : (ref = parentStatus.tasks) === null || ref === void 0 ? void 0 : ref.find((item)=>item.id == modifyItem.id\n            );\n            if (taskItem) {\n                taskItem.id = modifyItem.id;\n                taskItem.projectId = modifyItem.projectId;\n                taskItem.milestoneId = modifyItem.milestoneId;\n                taskItem.summary = modifyItem.summary;\n                taskItem.reporterId = modifyItem.reporterId;\n                taskItem.description = modifyItem.description;\n                taskItem.estimatedTime = modifyItem.estimatedTime;\n                taskItem.usageTime = modifyItem.usageTime;\n                taskItem.statusId = modifyItem.statusId;\n                taskItem.priority = modifyItem.priority;\n                console.log(\"Modify Task: Complete\");\n                console.log(modifyItem);\n                state.isModifyTaskCompleted = true;\n            } else {\n                console.log(\"Modify Task: Error\");\n            }\n        },\n        dropTask: (state, action)=>{\n            var ref;\n            const taskIndex = action.payload.taskIndex;\n            const taskItem = action.payload.taskItem;\n            const parentStatus = state.data.find((item)=>item.id == taskItem.statusId\n            );\n            parentStatus === null || parentStatus === void 0 ? void 0 : (ref = parentStatus.tasks) === null || ref === void 0 ? void 0 : ref.splice(taskIndex, 0, taskItem);\n        },\n        removeTask: (state, action)=>{\n            const id = action.payload.taskId;\n            const currentStateId = action.payload.statusId;\n            const parentStatus = state.data.find((item)=>item.id == currentStateId\n            );\n            if (parentStatus) {\n                var ref, ref1;\n                (ref = parentStatus.tasks) === null || ref === void 0 ? void 0 : ref.splice((ref1 = parentStatus.tasks) === null || ref1 === void 0 ? void 0 : ref1.findIndex((item)=>item.id == id\n                ), 1);\n                console.log(\"아이디 아래\");\n                console.log(id);\n                state.isRemoveTaskCompleted = true;\n            }\n        }\n    }\n});\nconst { addStatus , addTask , modifyStatus , modifyTask , dropTask , removeStatus , removeTask , initialStatus , initialCompleted ,  } = statusSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (statusSlice.reducer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./provider/modules/status.ts\n");

/***/ }),

/***/ "./provider/modules/taskModal.ts":
/*!***************************************!*\
  !*** ./provider/modules/taskModal.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"taskModalSlice\": () => (/* binding */ taskModalSlice),\n/* harmony export */   \"showTaskModal\": () => (/* binding */ showTaskModal),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n\nconst initialState = {\n    isOn: false,\n    taskItemId: undefined\n};\nconst taskModalSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"taskModal\",\n    initialState,\n    reducers: {\n        showTaskModal: (state, action)=>{\n            // console.log(action.type);\n            // console.log(action.payload);\n            const modalState = action.payload;\n            state.isOn = modalState.isOn;\n            state.taskItemId = modalState.taskItemId;\n            switch(state.isOn){\n                case false:\n                    console.log(\"Task Modal : off\\nCurrent Task Id : \", state.taskItemId);\n                    break;\n                case true:\n                    console.log(\"Task Modal : on\\nCurrent Task Id : \", state.taskItemId);\n                    break;\n                default:\n                    console.log(\"Task Modal : error\\nCurrent Task Id : \", state.taskItemId);\n                    break;\n            }\n        }\n    }\n});\nconst { showTaskModal  } = taskModalSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (taskModalSlice.reducer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wcm92aWRlci9tb2R1bGVzL3Rhc2tNb2RhbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQU83RCxLQUFLLENBQUNDLFlBQVksR0FBbUIsQ0FBQztJQUNwQ0MsSUFBSSxFQUFFLEtBQUs7SUFDWEMsVUFBVSxFQUFFQyxTQUFTO0FBQ3ZCLENBQUM7QUFFTSxLQUFLLENBQUNDLGNBQWMsR0FBR0wsNkRBQVcsQ0FBQyxDQUFDO0lBQ3pDTSxJQUFJLEVBQUUsQ0FBVztJQUNqQkwsWUFBWTtJQUNaTSxRQUFRLEVBQUUsQ0FBQztRQUNUQyxhQUFhLEdBQUdDLEtBQUssRUFBRUMsTUFBcUMsR0FBSyxDQUFDO1lBQ2hFLEVBQTRCO1lBQzVCLEVBQStCO1lBQy9CLEtBQUssQ0FBQ0MsVUFBVSxHQUFHRCxNQUFNLENBQUNFLE9BQU87WUFDakNILEtBQUssQ0FBQ1AsSUFBSSxHQUFHUyxVQUFVLENBQUNULElBQUk7WUFDNUJPLEtBQUssQ0FBQ04sVUFBVSxHQUFHUSxVQUFVLENBQUNSLFVBQVU7WUFFeEMsTUFBTSxDQUFFTSxLQUFLLENBQUNQLElBQUk7Z0JBQ2hCLElBQUksQ0FBQyxLQUFLO29CQUNSVyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFzQyx1Q0FBRUwsS0FBSyxDQUFDTixVQUFVO29CQUNwRSxLQUFLO2dCQUNQLElBQUksQ0FBQyxJQUFJO29CQUNQVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFxQyxzQ0FBRUwsS0FBSyxDQUFDTixVQUFVO29CQUNuRSxLQUFLOztvQkFFTFUsT0FBTyxDQUFDQyxHQUFHLENBQ1QsQ0FBd0MseUNBQ3hDTCxLQUFLLENBQUNOLFVBQVU7b0JBRWxCLEtBQUs7O1FBRVgsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDO0FBRU0sS0FBSyxDQUFDLENBQUMsQ0FBQ0ssYUFBYSxFQUFDLENBQUMsR0FBR0gsY0FBYyxDQUFDVSxPQUFPO0FBRXZELGlFQUFlVixjQUFjLENBQUNXLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW1wcm9qZWN0Ly4vcHJvdmlkZXIvbW9kdWxlcy90YXNrTW9kYWwudHM/MmYwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSwgUGF5bG9hZEFjdGlvbiB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbi8vIHRhc2tNb2RhbCBTbGljZVxyXG5leHBvcnQgaW50ZXJmYWNlIFRhc2tNb2RhbFN0YXRlIHtcclxuICBpc09uOiBib29sZWFuO1xyXG4gIHRhc2tJdGVtSWQ/OiBOdW1iZXI7XHJcbn1cclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZTogVGFza01vZGFsU3RhdGUgPSB7XHJcbiAgaXNPbjogZmFsc2UsXHJcbiAgdGFza0l0ZW1JZDogdW5kZWZpbmVkLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHRhc2tNb2RhbFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4gIG5hbWU6IFwidGFza01vZGFsXCIsXHJcbiAgaW5pdGlhbFN0YXRlLFxyXG4gIHJlZHVjZXJzOiB7XHJcbiAgICBzaG93VGFza01vZGFsOiAoc3RhdGUsIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxUYXNrTW9kYWxTdGF0ZT4pID0+IHtcclxuICAgICAgLy8gY29uc29sZS5sb2coYWN0aW9uLnR5cGUpO1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhhY3Rpb24ucGF5bG9hZCk7XHJcbiAgICAgIGNvbnN0IG1vZGFsU3RhdGUgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgc3RhdGUuaXNPbiA9IG1vZGFsU3RhdGUuaXNPbjtcclxuICAgICAgc3RhdGUudGFza0l0ZW1JZCA9IG1vZGFsU3RhdGUudGFza0l0ZW1JZDtcclxuXHJcbiAgICAgIHN3aXRjaCAoc3RhdGUuaXNPbikge1xyXG4gICAgICAgIGNhc2UgZmFsc2U6XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlRhc2sgTW9kYWwgOiBvZmZcXG5DdXJyZW50IFRhc2sgSWQgOiBcIiwgc3RhdGUudGFza0l0ZW1JZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIHRydWU6XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlRhc2sgTW9kYWwgOiBvblxcbkN1cnJlbnQgVGFzayBJZCA6IFwiLCBzdGF0ZS50YXNrSXRlbUlkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgICAgXCJUYXNrIE1vZGFsIDogZXJyb3JcXG5DdXJyZW50IFRhc2sgSWQgOiBcIixcclxuICAgICAgICAgICAgc3RhdGUudGFza0l0ZW1JZFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHsgc2hvd1Rhc2tNb2RhbCB9ID0gdGFza01vZGFsU2xpY2UuYWN0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRhc2tNb2RhbFNsaWNlLnJlZHVjZXI7XHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsImlzT24iLCJ0YXNrSXRlbUlkIiwidW5kZWZpbmVkIiwidGFza01vZGFsU2xpY2UiLCJuYW1lIiwicmVkdWNlcnMiLCJzaG93VGFza01vZGFsIiwic3RhdGUiLCJhY3Rpb24iLCJtb2RhbFN0YXRlIiwicGF5bG9hZCIsImNvbnNvbGUiLCJsb2ciLCJhY3Rpb25zIiwicmVkdWNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./provider/modules/taskModal.ts\n");

/***/ }),

/***/ "./styles/globals.scss":
/*!*****************************!*\
  !*** ./styles/globals.scss ***!
  \*****************************/
/***/ (() => {



/***/ }),

/***/ "./styles/sidebar.scss":
/*!*****************************!*\
  !*** ./styles/sidebar.scss ***!
  \*****************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nexports[\"default\"] = isError;\r\nfunction isError(err) {\r\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\r\n}\r\n\r\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtZXJyb3IuanM/MTc4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgICB2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gaXNFcnJvcjtcclxuZnVuY3Rpb24gaXNFcnJvcihlcnIpIHtcclxuICAgIHJldHVybiB0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJiBlcnIgIT09IG51bGwgJiYgJ25hbWUnIGluIGVyciAmJiAnbWVzc2FnZScgaW4gZXJyO1xyXG59XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlYW1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL25leHQvbGluay5qcz83NWIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9saW5rJylcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "@redux-saga/core":
/*!***********************************!*\
  !*** external "@redux-saga/core" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@redux-saga/core");

/***/ }),

/***/ "@redux-saga/core/effects":
/*!*******************************************!*\
  !*** external "@redux-saga/core/effects" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@redux-saga/core/effects");

/***/ }),

/***/ "@reduxjs/toolkit":
/*!***********************************!*\
  !*** external "@reduxjs/toolkit" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@reduxjs/toolkit");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ "../../../server/denormalize-page-path":
/*!************************************************************!*\
  !*** external "next/dist/server/denormalize-page-path.js" ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/denormalize-page-path.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-middleware-regex":
/*!****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-middleware-regex.js" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-middleware-regex.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-is");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-redux");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "redux-saga/effects":
/*!*************************************!*\
  !*** external "redux-saga/effects" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("redux-saga/effects");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.tsx"));
module.exports = __webpack_exports__;

})();